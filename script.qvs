///$tab Revision History
/*
	 ██████╗ ███╗   ███╗███████╗████████╗██╗███████╗    
	██╔═══██╗████╗ ████║██╔════╝╚══██╔══╝██║██╔════╝    
	██║   ██║██╔████╔██║█████╗     ██║   ██║███████╗    
	██║   ██║██║╚██╔╝██║██╔══╝     ██║   ██║╚════██║    
	╚██████╔╝██║ ╚═╝ ██║███████╗   ██║   ██║███████║    
	 ╚═════╝ ╚═╝     ╚═╝╚══════╝   ╚═╝   ╚═╝╚══════╝    
														

    
	App Description:	The purpose of this script is to detect if the app is in development or production.													
																								
	Created:			2020-Nov														
	Created By:			Chris Lofthouse													
																								
	Data Connections:
    	- Qlik Sense Items API to retrieve App and Stream details
        
	Revision History:																			
	Date Changed		Changed By				Description of Change
    ------------		----------				---------------------
    2020-11-23			Lofthouse C				Creation of initial app.
    2021-01-26			Walker A				Additional Tweaks
    2021-03-23			Walker A				Remove non-pagination of Reloads API as this works now
    											Allow overriding of limit per table due to issues with Reloads API
	2021-04-06			Walker A				Sort orders on tables, store QVDs and merge QVDs as first step towards incrementals
	
	Developer notes
    ----------------
	- Based on the Stream type and name, we can detect if the app is in development or production.
	
*/





///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='£ ###0.00;-£ ###0.00';
SET TimeFormat='hh:mm:ss';
SET DateFormat='DD/MM/YYYY';
SET TimestampFormat='DD/MM/YYYY hh:mm:ss[.fff]';
SET FirstWeekDay=1;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-GB';
SET CreateSearchIndexOnReload=1;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:μ;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';


///$tab Config & Connect
//Configure the environment variables
Trace Configuration;

////////////////////////////////////////////////////////////////////////////////////////
// *Required* Configuration 

// IMPORTANT: To run this application, the user must be a "Tenant Admin" and must have an API Key, which requires the "Developer Role"
// and APIs to be enabled within the tenant.

/* 
1. Fully qualified domain name for your tenant. 
		Example: 'company.us.qlikcloud.com'
*/
Set vu_tenant_fqdn = 'presales-ometis.eu.qlikcloud.com';

/*
2. The name of the REST connection that will be used. You must first create a valid REST connection to any endpoint to Qlik Sense tenant.
		Example: '<Space>:<Connection Name>'
        			Note: ':<Connection Name>' is the relative path which will check for a connection in the current space.
		Example Connection: 
					URL: 			https://<tenant-name>.<region>.qlikcloud.com/api/v1/items
					Header: 		"Authorization"
					Header Value: 	"Bearer <token>"
		For reference on how to connect: 
					https://qlik.dev/tutorials/generate-your-first-api-key
*/
Set vu_rest_connection = 'Development:REST for Reload Monitor (AW)';

Set vu_folder_store = 'Development:DataFiles';

/*
3. Set the number of rows to return in each query 
	May need reducing as API sometimes hits max REST response size with 100
*/
set vu_limit='100';

/*
4. Set the number of history days to get for incremental
	Max 90 days for audit before it goes into the archive
*/
set vu_history_days='2';

/*
5. Which tables of data to extract - usually you want all of them
Reloads may want a limit override
*/
Tables: 
Load * Inline [
	Table Name, 	ID field,		Sort field,	Limit override
    Users,			User ID,		,
    Events,			Event ID,		eventTime,	
    Reloads,		Reload ID,		,			50
    AuditsSources,	Audits Source,	,
    Apps,			App ID,			updatedAt,
    Spaces,			Space ID,		,
];

/*
    Events,			Event ID
    Reloads,		Reload ID
    AuditsSources,	Audits Source
    Apps,			App ID
    Users,			User ID
    Spaces,			Space ID
*/


LIB Connect to '$(vu_rest_connection)';
///$tab Maps
ReloadType_map:
mapping load * Inline [
	ReloadType, ReloadTypeDescription
    hub,		Manual
    chronos,	Scheduled
];
///$tab Table Loop Start
for vu_table_no = 0 to NoOfRows('Tables') - 1

	let vu_table_name=		peek('Table Name'		,$(vu_table_no),'Tables');
	let vu_id_field=		peek('ID field'  		,$(vu_table_no),'Tables');
	let vu_limit_override=	peek('Limit override'  	,$(vu_table_no),'Tables');
	let vu_sortfield=		peek('Sort field'		,$(vu_table_no),'Tables');

	if len('$(vu_limit_override)')>0 then
    	// Use the override value
		Set vNextURL = 'limit=$(vu_limit_override)';
    else
		// Set this to the default
		Set vNextURL = 'limit=$(vu_limit)';
	end if
    
	if len('$(vu_sortfield)')>0 then
    	// Add sort order with a URL-encoded - on the start for descending order
		Set vNextURL = '$(vNextURL)&sort=%2D$(vu_sortfield)';
	end if
    
    // Placeholder to concatenate too
	[$(vu_table_name)]: NoConcatenate Load * Inline [ $(vu_id_field) ];
	
    // Start pagination loop
	Do
    
    	// Just so we can use elseif and reorder the following sections
        if 1=0 then

///$tab -- Events
elseif '$(vu_table_name)'='Events' then

	RestConnectorMasterTable:
	SQL SELECT 
		"__KEY_root",
		(SELECT 
			"id" AS "id_u0",
			"source",
			"contentType",
			"eventType",
			"eventId",
			"eventTime",
			"tenantId" AS "tenantId_u0",
			"userId",
			"__KEY_data",
			"__FK_data",
			(SELECT 
				"createdByUser",
				"description",
				"id",
				"sub",
				"subType",
				"tenantId",
				"appId",
				"objectId",
				"objectType",
				"email",
				"subject",
				"_resourcetype",
				"createdDate",
				"dynamicColor",
				"hasSectionAccess",
				"lastReloadTime",
				"modifiedDate",
				"name",
				"originAppId",
				"owner",
				"ownerId",
				"publishTime",
				"published",
				"spaceId",
				"thumbnail",
				"duration" AS "duration_u0",
				"endTime",
				"peakMemoryBytes",
				"reloadId",
				"status",
				"startTime",
				"__KEY_data_u0",
				"__FK_data_u0",
				(SELECT 
					"__FK_custom"
				FROM "custom" FK "__FK_custom"),
				(SELECT 
					"file",
					"memory",
					"__FK_size"
				FROM "size" FK "__FK_size"),
				(SELECT 
					"@Value",
					"__FK_errors"
				FROM "errors" FK "__FK_errors" ArrayValueAlias "@Value"),
				(SELECT 
					"connection",
					"connectionId",
					"dataSize",
					"discriminator",
					"duration",
					"nbrOfFields",
					"nbrOfRows",
					"storageProvider",
					"type",
					"__FK_statements"
				FROM "statements" FK "__FK_statements"),
				(SELECT 
					"@Value" AS "@Value_u0",
					"__FK_warnings"
				FROM "warnings" FK "__FK_warnings" ArrayValueAlias "@Value_u0")
			FROM "data" PK "__KEY_data_u0" FK "__FK_data_u0"),
			(SELECT 
				"__KEY_links",
				"__FK_links",
				(SELECT 
					"Href",
					"__FK_Self"
				FROM "Self" FK "__FK_Self")
			FROM "links" PK "__KEY_links" FK "__FK_links")
		FROM "data" PK "__KEY_data" FK "__FK_data"),
		(SELECT 
			"Prev",
			"__KEY_links_u0",
			"__FK_links_u0",
			(SELECT 
				"Href" AS "Href_u0",
				"__FK_Self_u0"
			FROM "Self" FK "__FK_Self_u0"),
			(SELECT 
				"Href" AS "NextURL",		// Needs to be called NextURL to work with generic loop
				"__FK_Next" as "__FK_next" 	// Needs a small n to work with generic loop
			FROM "Next" FK "__FK_next")
		FROM "links" PK "__KEY_links_u0" FK "__FK_links_u0")
	FROM JSON (wrap on) "root" PK "__KEY_root"
	WITH CONNECTION(URL "https://$(vu_tenant_fqdn)/api/v1/audits?$(vNextURL)");

	Concatenate([$(vu_table_name)])
	LOAD
    	'Current'					AS [Event API Source],
    	[tenantId_u0]&'~'&[userId]	AS [%TenantUser],
        
        date(floor([eventTime]))	AS [Event Date],
        time(frac([eventTime]))		AS [Event Time],
        
        [id_u0] 					AS [Event ID],
		[source]					AS [Event Source],
		[contentType]				AS [Event Content Type],
		[eventType]					AS [Event Type],
		[eventId]					AS [Event ID ID],
		timestamp([eventTime])		AS [Event Timestamp]
// 		[tenantId_u0] 	AS [Event Tenant ID],
// 		[userId]		AS [Event User ID]
// 		[__KEY_data]
	RESIDENT RestConnectorMasterTable
	WHERE NOT IsNull([__KEY_data]);

// 	Concatenate([$(vu_table_name)])
// 	LOAD	
//     	[tenantId]&'~'&[appId]		AS [%TenantApp],
        
// 		[createdByUser]				AS [Event Created By],
// 		[description_u0] 			AS [Audit Description],
// 		[id]						AS [Event ID],
// 		[sub]						AS [Event Sub],
// 		[subType]					AS [Event Sub Type],
// // 		[tenantId],
// // 		[appId],
// 		[objectId]					AS [Event Object ID],
// 		[objectType]				AS [Event Object Type],
// 		[email]						AS [Event Email],
// 		[subject]					AS [Event Subject],
// 		[_resourcetype]				AS [Event Resource Type],
// 		timestamp([createdDate])	AS [Event Created Timestamp],
// // 		[dynamicColor],
// // 		[hasSectionAccess],
// // 		[lastReloadTime],
// // 		[modifiedDate],
// 		[name]						AS [Event Name],
// // 		[originAppId],
// // 		[owner],
// // 		[ownerId],
// // 		[publishTime],
// // 		[published],
// // 		[spaceId],
// // 		[thumbnail],
// // 		[duration_u0] AS [duration_u0],
// // 		[endTime],
// // 		[peakMemoryBytes],
// // 		[reloadId],
// 		[status]					AS [Event Status]
// // 		[startTime],
// // 		[__KEY_data_u0],
// // 		[__FK_data] AS [__KEY_data]
// 	RESIDENT RestConnectorMasterTable
// 	WHERE NOT IsNull([__FK_data]);


///$tab -- Items
elseif '$(vu_table_name)'='Apps' then

	RestConnectorMasterTable:
	SQL SELECT 
		"__KEY_root",
		(SELECT 
			"name" AS "name_u0",
			"description" AS "description_u0",
			"resourceCustomAttributes",
			"resourceUpdatedAt",
			"resourceType",
			"resourceSubType",
			"resourceId",
			"resourceCreatedAt",
			"id" AS "id_u0",
			"createdAt",
			"updatedAt",
			"creatorId",
			"updaterId",
			"tenantId",
			"isFavorited" AS "isFavorited_u0",
			"ownerId" AS "ownerId_u0",
			"resourceReloadEndTime",
			"resourceReloadStatus",
			"__KEY_data",
			"__FK_data",
			(SELECT 
				"_resourcetype",
				"createdDate",
				"description",
				"dynamicColor",
				"hasSectionAccess",
				"id",
				"lastReloadTime",
				"modifiedDate",
				"name",
				"originAppId",
				"owner",
				"ownerId",
				"publishTime",
				"published",
				"spaceId",
				"thumbnail",
				"__FK_resourceAttributes"
			FROM "resourceAttributes" FK "__FK_resourceAttributes"),
			(SELECT 
				"__KEY_links",
				"__FK_links",
				(SELECT 
					"href",
					"__FK_self"
				FROM "self" FK "__FK_self"),
				(SELECT 
					"href" AS "href_u0",
					"__FK_thumbnail"
				FROM "thumbnail" FK "__FK_thumbnail"),
				(SELECT 
					"href" AS "href_u1",
					"__FK_collections"
				FROM "collections" FK "__FK_collections"),
				(SELECT 
					"href" AS "href_u2",
					"__FK_open"
				FROM "open" FK "__FK_open")
			FROM "links" PK "__KEY_links" FK "__FK_links"),
			(SELECT 
				"@Value",
				"__FK_actions"
			FROM "actions" FK "__FK_actions" ArrayValueAlias "@Value"),
			(SELECT 
				"@Value" AS "@Value_u0",
				"__FK_collectionIds"
			FROM "collectionIds" FK "__FK_collectionIds" ArrayValueAlias "@Value_u0"),
			(SELECT 
				"isFavorited",
				"__KEY_meta",
				"__FK_meta",
				(SELECT 
					"@Value" AS "@Value_u1",
					"__FK_actions_u0"
				FROM "actions" FK "__FK_actions_u0" ArrayValueAlias "@Value_u1"),
				(SELECT 
					"@Value" AS "@Value_u2",
					"__FK_tags"
				FROM "tags" FK "__FK_tags" ArrayValueAlias "@Value_u2"),
				(SELECT 
					"@Value" AS "@Value_u3",
					"__FK_collections_u0"
				FROM "collections" FK "__FK_collections_u0" ArrayValueAlias "@Value_u3")
			FROM "meta" PK "__KEY_meta" FK "__FK_meta")
		FROM "data" PK "__KEY_data" FK "__FK_data"),
		(SELECT 
			"__KEY_links_u0",
			"__FK_links_u0",
			(SELECT 
				"href" AS "href_u3",
				"__FK_self_u0"
			FROM "self" FK "__FK_self_u0"),
			(SELECT 
				"href" AS "NextURL",
				"__FK_next"
			FROM "next" FK "__FK_next")
		FROM "links" PK "__KEY_links_u0" FK "__FK_links_u0")
	FROM JSON (wrap on) "root" PK "__KEY_root"
	WITH CONNECTION(URL "https://$(vu_tenant_fqdn)/api/v1/items?$(vNextURL)");

	[Apps_temp]:
	LOAD	
		[_resourcetype],
		timestamp([createdDate])	AS [App Created Date],
// 		[description],
		[dynamicColor]				AS [App Dymanic Color],
		[hasSectionAccess]			AS [App Has Section Acccess],
		[id] 						AS [App ID],
		timestamp([lastReloadTime])	AS [App Last Reload Time],
// 		timestamp([modifiedDate])	AS [App Modified Date],
// 		[name],
		[originAppId]				AS [App Origin App ID],
		[owner]						AS [App Owner],
		[ownerId]					AS [App Owner ID], // Temporarily rename to user ID to link to User data
		timestamp([publishTime])	AS [App Publish Time],
		[published]					AS [App Published],
		[spaceId]					AS [App Space ID],
		[thumbnail]					AS [App Thumbnail]
// 		[encrypted]
// 	 	[__KEY_resourceAttributes],
// 	 	[__FK_resourceAttributes] AS [__KEY_data]
	RESIDENT RestConnectorMasterTable
	WHERE NOT IsNull([__FK_resourceAttributes]);
	
	left join ([Apps_temp])
	LOAD
		[tenantId]&'~'&[resourceId]			AS [%TenantApp],
       	[tenantId]&'~'&[ownerId_u0]			AS [%TenantUser],

		[name_u0] 							AS [App Name],
		[description_u0] 					AS [App Description],
// 	 	[resourceCustomAttributes],
// 		timestamp([resourceUpdatedAt])		AS [Resource Updated At],
		[resourceType],
// 		[resourceSubType],
		[resourceId] 						AS [App ID],
// 		timestamp([resourceCreatedAt])		AS [Resource Created At],
		[id_u0],
		timestamp([createdAt])				AS [App Created At],
		timestamp([updatedAt])				AS [App Updated At],
		[creatorId]							AS [App Creator ID],
		[updaterId]							AS [App Updater ID],
		[tenantId] 							AS [App Tenant ID],
// 		[isFavorited_u0],
// 		[ownerId_u0],
// 		timestamp([resourceReloadEndTime])	AS [App Reload End Time],
		[resourceReloadStatus]				AS [App Reload Status]
// 		[__KEY_data],
// 	 	[__FK_data] AS [__KEY_root]
	RESIDENT RestConnectorMasterTable
	WHERE NOT IsNull([__FK_data]);
    
    Concatenate([$(vu_table_name)]) 
    Load 
    	*,
       	[App Tenant ID]&'~'&[App Space ID]	AS [%TenantSpace]
    Resident [Apps_temp]
    where resourceType='app';
    
    drop fields [resourceType],[App Space ID],[App Tenant ID];
    drop table Apps_temp;
	

///$tab -- Reloads
// WARNING: this loop is aborted after the first loop at the moment

elseif '$(vu_table_name)'='Reloads' then

	RestConnectorMasterTable:
	SQL SELECT 
		"__KEY_root",
		(SELECT 
			"id",
			"appId",
			"tenantId",
			"userId",
			"type",
			"status",
			"log",
			"duration",
			"creationTime",
			"startTime",
			"endTime",
			"engineTime",
			"__KEY_data",
			"__FK_data",
			(SELECT 
				"__KEY_links",
				"__FK_links",
				(SELECT 
					"href",
					"__FK_self"
				FROM "self" FK "__FK_self")
			FROM "links" PK "__KEY_links" FK "__FK_links")
		FROM "data" PK "__KEY_data" FK "__FK_data"),
		(SELECT 
			"__KEY_links_u0",
			"__FK_links_u0",
			(SELECT 
				"href" AS "href_u0",
				"__FK_self_u0"
			FROM "self" FK "__FK_self_u0"),
			(SELECT 
				"href" AS "NextURL",
				"__FK_next"
			FROM "next" FK "__FK_next")
		FROM "links" PK "__KEY_links_u0" FK "__FK_links_u0")
	FROM JSON (wrap on) "root" PK "__KEY_root"
	WITH CONNECTION(URL "https://$(vu_tenant_fqdn)/api/v1/reloads?$(vNextURL)");

	Concatenate([$(vu_table_name)])
    LOAD
		// Calculated fields
		[tenantId] &'~'&[appId] 			AS [%TenantApp],
        Interval([endTime]-[startTime])		AS [Reload Duration],
        
        date(floor([startTime]))			AS [Reload Start Date],
        time(frac([startTime]))				AS [Reload Start Time],
        
        applymap('ReloadType_map',type)		AS [Reload Type Description],

		// Simple formats
		timestamp([creationTime])			AS [Reload Creation Timestamp],
		timestamp([startTime])				AS [Reload Start Timestamp],
		timestamp([endTime])				AS [Reload End Timestamp],
		timestamp([engineTime])				AS [Reload Engine Timestamp],

		// Simple renames
		[id] 								AS [Reload ID],
// 	 	[appId] 							AS [App ID],
// 	 	[tenantId] 							AS [Tenant ID],
		[userId] 							AS [Reload User ID],
		[type] 								AS [Reload Type],
		[status] 							AS [Reload Status],
		[log] 								AS [Reload Log]
// 		[duration] 							AS [Reload Duration Text],
	RESIDENT RestConnectorMasterTable
	WHERE NOT IsNull([__KEY_data]);

    

///$tab -- Users
elseif '$(vu_table_name)'='Users' then

	RestConnectorMasterTable:
	SQL SELECT 
		"__KEY_root",
		(SELECT 
			"__KEY_links",
			"__FK_links",
			(SELECT 
				"href",
				"__FK_self"
			FROM "self" FK "__FK_self"),
			(SELECT 
				"href" AS "NextURL",
				"__FK_next"
			FROM "next" FK "__FK_next")
		FROM "links" PK "__KEY_links" FK "__FK_links"),
		(SELECT 
			"id",
			"tenantId",
			"created",
			"lastUpdated",
			"status",
			"name",
			"subject",
			"email",
            "preferredLocale",
			"__KEY_data",
			"__FK_data",
			(SELECT 
				"@Value",
				"__FK_roles"
			FROM "roles" FK "__FK_roles" ArrayValueAlias "@Value"),
			(SELECT 
				"__KEY_links_u0",
				"__FK_links_u0",
				(SELECT 
					"href" AS "href_u1",
					"__FK_self_u0"
				FROM "self" FK "__FK_self_u0")
			FROM "links" PK "__KEY_links_u0" FK "__FK_links_u0")
		FROM "data" PK "__KEY_data" FK "__FK_data")
	FROM JSON (wrap on) "root" PK "__KEY_root"
	WITH CONNECTION(URL "https://$(vu_tenant_fqdn)/api/v1/users?$(vNextURL)");
	
	Concatenate([$(vu_table_name)])
	LOAD
    	[tenantId]&'~'&[id]			AS [%TenantUser],
		[id]						AS [User ID],
// 		[tenantId]					AS [Tenant ID],
		timestamp([created])		AS [User Created],
		timestamp([lastUpdated])	AS [User Last Updated],
		[status]					AS [User Status],
		[name]						AS [User Name],
		[subject]					AS [User Subject],
		[email]						AS [User Email],
		[preferredLocale]			AS [User Preferred Locale]
// 		[__KEY_data],
// 		[__FK_data] AS [__KEY_root]
	RESIDENT RestConnectorMasterTable
	WHERE NOT IsNull([__FK_data]);



///$tab -- Spaces
elseif '$(vu_table_name)'='Spaces' then

	RestConnectorMasterTable:
	SQL SELECT 
		"__KEY_root",
		(SELECT 
			"id",
			"type",
			"ownerId",
			"tenantId",
			"name",
			"description",
			"createdAt",
			"createdBy",
			"updatedAt",
			"__KEY_data",
			"__FK_data",
			(SELECT 
				"__KEY_meta",
				"__FK_meta",
				(SELECT 
					"@Value",
					"__FK_actions"
				FROM "actions" FK "__FK_actions" ArrayValueAlias "@Value"),
				(SELECT 
					"@Value" AS "@Value_u0",
					"__FK_roles"
				FROM "roles" FK "__FK_roles" ArrayValueAlias "@Value_u0"),
				(SELECT 
					"@Value" AS "@Value_u1",
					"__FK_assignableRoles"
				FROM "assignableRoles" FK "__FK_assignableRoles" ArrayValueAlias "@Value_u1")
			FROM "meta" PK "__KEY_meta" FK "__FK_meta"),
			(SELECT 
				"__KEY_links",
				"__FK_links",
				(SELECT 
					"href",
					"__FK_self"
				FROM "self" FK "__FK_self"),
				(SELECT 
					"href" AS "href_u0",
					"__FK_assignments"
				FROM "assignments" FK "__FK_assignments")
			FROM "links" PK "__KEY_links" FK "__FK_links")
		FROM "data" PK "__KEY_data" FK "__FK_data"),
		(SELECT 
			"count",
			"__FK_meta_u0"
		FROM "meta" FK "__FK_meta_u0"),
		(SELECT 
			"__KEY_links_u0",
			"__FK_links_u0",
			(SELECT 
				"href" AS "href_u1",
				"__FK_self_u0"
			FROM "self" FK "__FK_self_u0"),
			(SELECT 
				"href" AS "NextURL",
				"__FK_next"
			FROM "next" FK "__FK_next")
		FROM "links" PK "__KEY_links_u0" FK "__FK_links_u0")
	FROM JSON (wrap on) "root" PK "__KEY_root"
	WITH CONNECTION(URL "https://$(vu_tenant_fqdn)/api/v1/spaces?$(vNextURL)");

	Concatenate([$(vu_table_name)])
	LOAD	
		[tenantId]&'~'&[id] 	AS [%TenantSpace],
		[id] 					AS [Space ID],
		[type] 					AS [Space Type],
		[ownerId] 				AS [Space Owner ID],
	// 	[tenantId],
		[name] 					AS [Space Name],
		[description] 			AS [Space Description],
		timestamp([createdAt])	AS [Space Created At],
		[createdBy]				AS [Space Created By],
		timestamp([updatedAt])	AS [Space Updated At]
	// 	[__KEY_data],
	// 	[__FK_data] AS [__KEY_root]
	RESIDENT RestConnectorMasterTable
	WHERE NOT IsNull([__FK_data]);



///$tab -- AuditsSources
elseif '$(vu_table_name)'='AuditsSources' then

	RestConnectorMasterTable:
	SQL SELECT 
		"__KEY_root",
		(SELECT 
			"@Value",
			"__FK_data"
		FROM "data" FK "__FK_data" ArrayValueAlias "@Value"),
		(SELECT 
			"Next",
			"Prev",
			"__KEY_links",
			"__FK_links",
			(SELECT 
				"Href",
				"__FK_Self"
			FROM "Self" FK "__FK_Self"),
			(SELECT 
				"Href" as "NextURL",
				"__FK_next"
			FROM "Next" FK "__FK_next")
		FROM "links" PK "__KEY_links" FK "__FK_links")
	FROM JSON (wrap on) "root" PK "__KEY_root"
	WITH CONNECTION(URL "https://$(vu_tenant_fqdn)/api/v1/audits/sources?$(vNextURL)");

	Concatenate([$(vu_table_name)])
	LOAD	
    	[@Value]	AS [Audits Source]
	RESIDENT RestConnectorMasterTable
	WHERE NOT IsNull([__FK_data]);
///$tab Table Loop End
		// End url_suffix if statement
		end if	
	
		NextURL:
		Load NextURL
		Resident RestConnectorMasterTable
		Where not IsNull([__FK_next]);
	
		Let vNextURL = 		SubField(Peek('NextURL',0,'NextURL'),'?',-1);
		Let vNextURLRows = 	NoOfRows('NextURL');
		Drop Table NextURL;
        
        let vNow=now();
        trace '$(vNow): Next URL: $(vNextURL)';
        
		if len('$(vu_sortfield)')>0 then
        	MaxDate: Load date(floor(max([$(vu_sortfield)]))) as MaxDate resident RestConnectorMasterTable;
            let vMaxDate=peek('MaxDate',0,'MaxDate');
            trace 'Max Date: $(vMaxDate)';
            
            if peek('MaxDate',0,'MaxDate')<floor(today()-$(vu_history_days)) then
	            trace 'Max Date: $(vMaxDate) is before $(=today()-$(vu_history_days))';
            	// Override this to force us out of the loop
            	let vNextURLRows=0;
			end if

			drop table MaxDate;
		end if

		Drop Table RestConnectorMasterTable;
        
	Loop while $(vNextURLRows)>0;

	// Incremental save based on ID (no deletes)
	if QvdCreateTime('lib://$(vu_folder_store)/SystemMonitor_$(vu_table_name).qvd') > 0 then
    	Concatenate([$(vu_table_name)])
        LOAD * From [lib://$(vu_folder_store)/SystemMonitor_$(vu_table_name).qvd] (qvd)
        Where not exists([$(vu_id_field)]); 
	end if

    trace '$(vNow): store [$(vu_table_name)] into [lib://$(vu_folder_store)/SystemMonitor_$(vu_table_name).qvd] (qvd)';
    store [$(vu_table_name)] into [lib://$(vu_folder_store)/SystemMonitor_$(vu_table_name).qvd] (qvd);

next vu_table_no

drop table Tables;
///$tab Calendar
// TODO!
///$tab EXIT SCRIPT
EXIT SCRIPT;
///$tab Events Archive
// // This one needs a different loop by date...

// // Archive seems to start from 2 days ago
// // Get x days from them
// ArchiveDates:
// Load
// 	date(today()-rowno()-1,'YYYY-MM-DD') as ArchiveDate
// autogenerate($(vu_history_days));

// for each vDate in FieldValueList('ArchiveDate')

// 	RestConnectorMasterTable:
// 	SQL SELECT 
// 		"source" AS "source_u0",
// 		"contentType",
// 		"eventType",
// 		"eventId",
// 		"eventTime",
// 		"tenantId" AS "tenantId_u0",
// 		"userId",
// 		"__KEY_data",
// 		(SELECT 
// 			"email",
// 			"id",
// 			"subject",
// 			"tenantId",
// 			"source",
// 			"name",
// 			"reloadId",
// 			"spaceId",
// 			"startTime",
// 			"createdByUser",
// 			"description",
// 			"sub",
// 			"subType",
// 			"duration" AS "duration_u0",
// 			"endTime",
// 			"peakMemoryBytes",
// 			"status",
// 			"_resourcetype",
// 			"lastReloadTime",
// 			"createdDate",
// 			"dynamicColor",
// 			"hasSectionAccess",
// 			"modifiedDate",
// 			"originAppId",
// 			"owner",
// 			"ownerId",
// 			"publishTime",
// 			"published",
// 			"thumbnail",
// 			"__KEY_data_u0",
// 			"__FK_data",
// 			(SELECT 
// 				"@Value",
// 				"__FK_errors"
// 			FROM "errors" FK "__FK_errors" ArrayValueAlias "@Value"),
// 			(SELECT 
// 				"file",
// 				"memory",
// 				"__FK_size"
// 			FROM "size" FK "__FK_size"),
// 			(SELECT 
// 				"connection",
// 				"connectionId",
// 				"dataSize",
// 				"discriminator",
// 				"duration",
// 				"nbrOfFields",
// 				"nbrOfRows",
// 				"storageProvider",
// 				"type",
// 				"__FK_statements"
// 			FROM "statements" FK "__FK_statements"),
// 			(SELECT 
// 				"@Value" AS "@Value_u0",
// 				"__FK_warnings"
// 			FROM "warnings" FK "__FK_warnings" ArrayValueAlias "@Value_u0"),
// 			(SELECT 
// 				"__FK_custom"
// 			FROM "custom" FK "__FK_custom")
// 		FROM "data" PK "__KEY_data_u0" FK "__FK_data")
// 	FROM JSON (wrap off) "data" PK "__KEY_data"
// 	WITH CONNECTION(URL "https://$(vu_tenant_fqdn)/api/v1/audits/archive?date=$(vDate)");

// 	Concatenate([Events])
// 	LOAD
//     	'Archive'					AS [Event API Source],
//     	[tenantId_u0]&'~'&[userId]	AS [%TenantUser],
        
//         date(floor([eventTime]))	AS [Event Date],
//         time(frac([eventTime]))		AS [Event Time],
        
// 		[source_u0]					AS [Event Source],
// 		[contentType]				AS [Event Content Type],
// 		[eventType]					AS [Event Type],
// 		[eventId]					AS [Event ID ID],
// 		timestamp([eventTime])		AS [Event Timestamp]
// // 		[tenantId_u0] 	AS [Event Tenant ID],
// // 		[userId]		AS [Event User ID]
// // 		[__KEY_data]
// 	RESIDENT RestConnectorMasterTable
// 	WHERE NOT IsNull([__KEY_data]);


// 	DROP TABLE RestConnectorMasterTable;

// next vDate


///$tab -- App Meta Data
[Fields]:
LOAD * INLINE [
App ID
];

FOR EACH appID IN FieldValueList('App ID')

  RestConnectorMasterTable:
  SQL SELECT 
      "static_byte_size",
      "has_section_access",
      "__KEY_root",
      (SELECT 
          "cpu_time_spent_ms",
          "peak_memory_bytes",
          "__FK_reload_meta",
          "__KEY_reload_meta"
      FROM "reload_meta" PK "__KEY_reload_meta" FK "__FK_reload_meta"),
      (SELECT 
          "name",
          "is_system",
          "is_hidden",
          "is_semantic",
          "distinct_only",
          "cardinal",
          "total_count",
          "is_locked",
          "always_one_selected",
          "is_numeric",
          "comment",
          "byte_size",
          "hash",
          "__KEY_fields",
          "__FK_fields",
          (SELECT 
              "@Value",
              "__FK_src_tables"
          FROM "src_tables" FK "__FK_src_tables" ArrayValueAlias "@Value"),
          (SELECT 
              "@Value" AS "@Value_u0",
              "__FK_tags"
          FROM "tags" FK "__FK_tags" ArrayValueAlias "@Value_u0")
      FROM "fields" PK "__KEY_fields" FK "__FK_fields"),
      (SELECT 
          "name" AS "name_u0",
          "is_system" AS "is_system_u0",
          "is_semantic" AS "is_semantic_u0",
          "is_loose",
          "no_of_rows",
          "no_of_fields",
          "no_of_key_fields",
          "comment" AS "comment_u0",
          "byte_size" AS "byte_size_u0",
          "__FK_tables"
      FROM "tables" FK "__FK_tables")
  FROM JSON (wrap on) "root" PK "__KEY_root"
  WITH CONNECTION(
              URL "https://$(vu_tenant_fqdn)/api/v1/apps/$(appID)/data/metadata"
              );

  [Reload Meta]:
  LOAD
  	  '$(appID)' AS [App ID],
  	  [cpu_time_spent_ms],
      [peak_memory_bytes]
  RESIDENT RestConnectorMasterTable
  WHERE NOT IsNull([__FK_reload_meta]);


  [TmpFields]:
  LOAD	
      [name] AS [Field name],
      [is_system],
      [is_hidden],
      [is_semantic],
      [distinct_only],
      [cardinal],
      [total_count],
      [is_locked],
      [always_one_selected],
      [is_numeric],
      [comment],
      [byte_size],
      [hash],
      [__KEY_fields],
      [__FK_fields] AS [__KEY_root]
  RESIDENT RestConnectorMasterTable
  WHERE NOT IsNull([__FK_fields]);

  LEFT JOIN([TmpFields])
  LOAD	
      [__FK_tags] AS [__KEY_fields],
      CONCAT(DISTINCT [@Value_u0], ', ') AS [Field tags]
  RESIDENT RestConnectorMasterTable
  WHERE NOT IsNull([__FK_tags])
  GROUP BY [__FK_tags];

  LEFT JOIN([TmpFields])
  LOAD	
      [__FK_src_tables] AS [__KEY_fields],
      CONCAT(DISTINCT [@Value], ', ') AS [Source tables]
  RESIDENT RestConnectorMasterTable
  WHERE NOT IsNull([__FK_src_tables])
  GROUP BY [__FK_src_tables];
  
  DROP FIELD [__KEY_root] FROM [TmpFields];
  
  CONCATENATE([Fields])
  LOAD
  	  '$(appID)' AS [App ID],
      *
  RESIDENT [TmpFields];
  
  DROP TABLE [TmpFields];

  [Tables]:
  LOAD
  	  '$(appID)' AS [App ID],
  	  [name_u0] AS [name_u0],
      [is_system_u0] AS [is_system_u0],
      [is_semantic_u0] AS [is_semantic_u0],
      [is_loose],
      [no_of_rows],
      [no_of_fields],
      [no_of_key_fields],
      [comment_u0] AS [comment_u0],
      [byte_size_u0] AS [byte_size_u0]
  RESIDENT RestConnectorMasterTable
  WHERE NOT IsNull([__FK_tables]);


  [App Meta]:
  LOAD
  	  '$(appID)' AS [App ID],
  	  [static_byte_size],
      [has_section_access]
  RESIDENT RestConnectorMasterTable
  WHERE NOT IsNull([__KEY_root]);


  DROP TABLE RestConnectorMasterTable;

NEXT appID;

///$tab Audits Archive raw
LIB CONNECT TO 'Development:REST for Reload Monitor (AW)';

RestConnectorMasterTable:
SQL SELECT 
	"source" AS "source_u0",
	"contentType",
	"eventType",
	"eventId",
	"eventTime",
	"tenantId" AS "tenantId_u0",
	"userId",
	"__KEY_data",
	(SELECT 
		"email",
		"id",
		"subject",
		"tenantId",
		"source",
		"name",
		"reloadId",
		"spaceId",
		"startTime",
		"createdByUser",
		"description",
		"sub",
		"subType",
		"duration" AS "duration_u0",
		"endTime",
		"peakMemoryBytes",
		"status",
		"_resourcetype",
		"lastReloadTime",
		"createdDate",
		"dynamicColor",
		"hasSectionAccess",
		"modifiedDate",
		"originAppId",
		"owner",
		"ownerId",
		"publishTime",
		"published",
		"thumbnail",
		"__KEY_data_u0",
		"__FK_data",
		(SELECT 
			"@Value",
			"__FK_errors"
		FROM "errors" FK "__FK_errors" ArrayValueAlias "@Value"),
		(SELECT 
			"file",
			"memory",
			"__FK_size"
		FROM "size" FK "__FK_size"),
		(SELECT 
			"connection",
			"connectionId",
			"dataSize",
			"discriminator",
			"duration",
			"nbrOfFields",
			"nbrOfRows",
			"storageProvider",
			"type",
			"__FK_statements"
		FROM "statements" FK "__FK_statements"),
		(SELECT 
			"@Value" AS "@Value_u0",
			"__FK_warnings"
		FROM "warnings" FK "__FK_warnings" ArrayValueAlias "@Value_u0"),
		(SELECT 
			"__FK_custom"
		FROM "custom" FK "__FK_custom")
	FROM "data" PK "__KEY_data_u0" FK "__FK_data")
FROM JSON (wrap off) "data" PK "__KEY_data";

[errors]:
LOAD	[@Value],
	[__FK_errors] AS [__KEY_data_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_errors]);


[size]:
LOAD	[file],
	[memory],
	[__FK_size] AS [__KEY_data_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_size]);


[statements]:
LOAD	[connection],
	[connectionId],
	[dataSize],
	[discriminator],
	[duration],
	[nbrOfFields],
	[nbrOfRows],
	[storageProvider],
	[type],
	[__FK_statements] AS [__KEY_data_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_statements]);


[warnings]:
LOAD	[@Value_u0] AS [@Value_u0],
	[__FK_warnings] AS [__KEY_data_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_warnings]);


[custom]:
LOAD	[__FK_custom] AS [__KEY_data_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_custom]);


[data]:
LOAD	[email],
	[id],
	[subject],
	[tenantId],
	[source],
	[name],
	[reloadId],
	[spaceId],
	[startTime],
	[createdByUser],
	[description],
	[sub],
	[subType],
	[duration_u0] AS [duration_u0],
	[endTime],
	[peakMemoryBytes],
	[status],
	[_resourcetype],
	[lastReloadTime],
	[createdDate],
	[dynamicColor],
	[hasSectionAccess],
	[modifiedDate],
	[originAppId],
	[owner],
	[ownerId],
	[publishTime],
	[published],
	[thumbnail],
	[__KEY_data_u0],
	[__FK_data] AS [__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_data]);


[data_u0]:
LOAD	[source_u0] AS [source_u0],
	[contentType],
	[eventType],
	[eventId],
	[eventTime],
	[tenantId_u0] AS [tenantId_u0],
	[userId],
	[__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__KEY_data]);


DROP TABLE RestConnectorMasterTable;



///$tab Audits raw
LIB CONNECT TO 'Development:REST for Reload Monitor (AW)';

RestConnectorMasterTable:
SQL SELECT 
	"__KEY_root",
	(SELECT 
		"id" AS "id_u0",
		"source",
		"contentType",
		"eventType",
		"eventId",
		"eventTime",
		"tenantId" AS "tenantId_u0",
		"userId",
		"__KEY_data",
		"__FK_data",
		(SELECT 
			"createdByUser",
			"description",
			"id",
			"sub",
			"subType",
			"tenantId",
			"appId",
			"objectId",
			"objectType",
			"email",
			"subject",
			"_resourcetype",
			"createdDate",
			"dynamicColor",
			"hasSectionAccess",
			"lastReloadTime",
			"modifiedDate",
			"name",
			"originAppId",
			"owner",
			"ownerId",
			"publishTime",
			"published",
			"spaceId",
			"thumbnail",
			"duration" AS "duration_u0",
			"endTime",
			"peakMemoryBytes",
			"reloadId",
			"status",
			"startTime",
			"__KEY_data_u0",
			"__FK_data_u0",
			(SELECT 
				"__FK_custom"
			FROM "custom" FK "__FK_custom"),
			(SELECT 
				"file",
				"memory",
				"__FK_size"
			FROM "size" FK "__FK_size"),
			(SELECT 
				"@Value",
				"__FK_errors"
			FROM "errors" FK "__FK_errors" ArrayValueAlias "@Value"),
			(SELECT 
				"connection",
				"connectionId",
				"dataSize",
				"discriminator",
				"duration",
				"nbrOfFields",
				"nbrOfRows",
				"storageProvider",
				"type",
				"__FK_statements"
			FROM "statements" FK "__FK_statements"),
			(SELECT 
				"@Value" AS "@Value_u0",
				"__FK_warnings"
			FROM "warnings" FK "__FK_warnings" ArrayValueAlias "@Value_u0")
		FROM "data" PK "__KEY_data_u0" FK "__FK_data_u0"),
		(SELECT 
			"__KEY_links",
			"__FK_links",
			(SELECT 
				"Href",
				"__FK_Self"
			FROM "Self" FK "__FK_Self")
		FROM "links" PK "__KEY_links" FK "__FK_links")
	FROM "data" PK "__KEY_data" FK "__FK_data"),
	(SELECT 
		"Prev",
		"__KEY_links_u0",
		"__FK_links_u0",
		(SELECT 
			"Href" AS "Href_u0",
			"__FK_Self_u0"
		FROM "Self" FK "__FK_Self_u0"),
		(SELECT 
			"Href" AS "Href_u1",
			"__FK_Next"
		FROM "Next" FK "__FK_Next")
	FROM "links" PK "__KEY_links_u0" FK "__FK_links_u0")
FROM JSON (wrap on) "root" PK "__KEY_root";

[custom]:
LOAD	[__FK_custom] AS [__KEY_data_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_custom]);


[size]:
LOAD	[file],
	[memory],
	[__FK_size] AS [__KEY_data_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_size]);


[errors]:
LOAD	[@Value],
	[__FK_errors] AS [__KEY_data_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_errors]);


[statements]:
LOAD	[connection],
	[connectionId],
	[dataSize],
	[discriminator],
	[duration],
	[nbrOfFields],
	[nbrOfRows],
	[storageProvider],
	[type],
	[__FK_statements] AS [__KEY_data_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_statements]);


[warnings]:
LOAD	[@Value_u0] AS [@Value_u0],
	[__FK_warnings] AS [__KEY_data_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_warnings]);


[data]:
LOAD	[createdByUser],
	[description],
	[id],
	[sub],
	[subType],
	[tenantId],
	[appId],
	[objectId],
	[objectType],
	[email],
	[subject],
	[_resourcetype],
	[createdDate],
	[dynamicColor],
	[hasSectionAccess],
	[lastReloadTime],
	[modifiedDate],
	[name],
	[originAppId],
	[owner],
	[ownerId],
	[publishTime],
	[published],
	[spaceId],
	[thumbnail],
	[duration_u0] AS [duration_u0],
	[endTime],
	[peakMemoryBytes],
	[reloadId],
	[status],
	[startTime],
	[__KEY_data_u0],
	[__FK_data_u0] AS [__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_data_u0]);


[Self]:
LOAD	[Href],
	[__FK_Self] AS [__KEY_links]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_Self]);


[links]:
LOAD	[__KEY_links],
	[__FK_links] AS [__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_links]);


[data_u0]:
LOAD	[id_u0] AS [id_u0],
	[source],
	[contentType],
	[eventType],
	[eventId],
	[eventTime],
	[tenantId_u0] AS [tenantId_u0],
	[userId],
	[__KEY_data],
	[__FK_data] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_data]);


[Self_u0]:
LOAD	[Href_u0] AS [Href_u0],
	[__FK_Self_u0] AS [__KEY_links_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_Self_u0]);


[Next]:
LOAD	[Href_u1] AS [Href_u1],
	[__FK_Next] AS [__KEY_links_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_Next]);


[links_u0]:
LOAD	[Prev],
	[__KEY_links_u0],
	[__FK_links_u0] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_links_u0]);


[root]:
LOAD	[__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__KEY_root]);


DROP TABLE RestConnectorMasterTable;



///$tab Get Audit Sources
LIB CONNECT TO 'Development:REST for Reload Monitor';
//https://$(vu_tenant_fqdn)/api/v1/audits/sources

LIB CONNECT TO 'Development:REST for Reload Monitor (AW)';

RestConnectorMasterTable:
SQL SELECT 
	"__KEY_root",
	(SELECT 
		"@Value",
		"__FK_data"
	FROM "data" FK "__FK_data" ArrayValueAlias "@Value"),
	(SELECT 
		"Next",
		"Prev",
		"__KEY_links",
		"__FK_links",
		(SELECT 
			"Href",
			"__FK_Self"
		FROM "Self" FK "__FK_Self")
	FROM "links" PK "__KEY_links" FK "__FK_links")
FROM JSON (wrap on) "root" PK "__KEY_root";

[data]:
LOAD	[@Value],
	[__FK_data] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_data]);


[Self]:
LOAD	[Href],
	[__FK_Self] AS [__KEY_links]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_Self]);


[links]:
LOAD	[Next],
	[Prev],
	[__KEY_links],
	[__FK_links] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_links]);


[root]:
LOAD	[__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__KEY_root]);


DROP TABLE RestConnectorMasterTable;



///$tab Spaces raw
LIB CONNECT TO 'Development:REST for Reload Monitor (AW)';

RestConnectorMasterTable:
SQL SELECT 
	"__KEY_root",
	(SELECT 
		"id",
		"type",
		"ownerId",
		"tenantId",
		"name",
		"description",
		"createdAt",
		"createdBy",
		"updatedAt",
		"__KEY_data",
		"__FK_data",
		(SELECT 
			"__KEY_meta",
			"__FK_meta",
			(SELECT 
				"@Value",
				"__FK_actions"
			FROM "actions" FK "__FK_actions" ArrayValueAlias "@Value"),
			(SELECT 
				"@Value" AS "@Value_u0",
				"__FK_roles"
			FROM "roles" FK "__FK_roles" ArrayValueAlias "@Value_u0"),
			(SELECT 
				"@Value" AS "@Value_u1",
				"__FK_assignableRoles"
			FROM "assignableRoles" FK "__FK_assignableRoles" ArrayValueAlias "@Value_u1")
		FROM "meta" PK "__KEY_meta" FK "__FK_meta"),
		(SELECT 
			"__KEY_links",
			"__FK_links",
			(SELECT 
				"href",
				"__FK_self"
			FROM "self" FK "__FK_self"),
			(SELECT 
				"href" AS "href_u0",
				"__FK_assignments"
			FROM "assignments" FK "__FK_assignments")
		FROM "links" PK "__KEY_links" FK "__FK_links")
	FROM "data" PK "__KEY_data" FK "__FK_data"),
	(SELECT 
		"count",
		"__FK_meta_u0"
	FROM "meta" FK "__FK_meta_u0"),
	(SELECT 
		"__KEY_links_u0",
		"__FK_links_u0",
		(SELECT 
			"href" AS "href_u1",
			"__FK_self_u0"
		FROM "self" FK "__FK_self_u0"),
		(SELECT 
			"href" AS "href_u2",
			"__FK_next"
		FROM "next" FK "__FK_next")
	FROM "links" PK "__KEY_links_u0" FK "__FK_links_u0")
FROM JSON (wrap on) "root" PK "__KEY_root";

[actions]:
LOAD	[@Value],
	[__FK_actions] AS [__KEY_meta]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_actions]);


[roles]:
LOAD	[@Value_u0] AS [@Value_u0],
	[__FK_roles] AS [__KEY_meta]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_roles]);


[assignableRoles]:
LOAD	[@Value_u1] AS [@Value_u1],
	[__FK_assignableRoles] AS [__KEY_meta]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_assignableRoles]);


[meta]:
LOAD	[__KEY_meta],
	[__FK_meta] AS [__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_meta]);


[self]:
LOAD	[href],
	[__FK_self] AS [__KEY_links]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_self]);


[assignments]:
LOAD	[href_u0] AS [href_u0],
	[__FK_assignments] AS [__KEY_links]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_assignments]);


[links]:
LOAD	[__KEY_links],
	[__FK_links] AS [__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_links]);


[data]:
LOAD	[id],
	[type],
	[ownerId],
	[tenantId],
	[name],
	[description],
	[createdAt],
	[createdBy],
	[updatedAt],
	[__KEY_data],
	[__FK_data] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_data]);


[meta_u0]:
LOAD	[count],
	[__FK_meta_u0] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_meta_u0]);


[self_u0]:
LOAD	[href_u1] AS [href_u1],
	[__FK_self_u0] AS [__KEY_links_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_self_u0]);


[next]:
LOAD	[href_u2] AS [href_u2],
	[__FK_next] AS [__KEY_links_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_next]);


[links_u0]:
LOAD	[__KEY_links_u0],
	[__FK_links_u0] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_links_u0]);


[root]:
LOAD	[__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__KEY_root]);


DROP TABLE RestConnectorMasterTable;



///$tab Users raw
LIB CONNECT TO 'Development:REST for Reload Monitor (AW)';

RestConnectorMasterTable:
SQL SELECT 
	"__KEY_root",
	(SELECT 
		"__KEY_links",
		"__FK_links",
		(SELECT 
			"href",
			"__FK_self"
		FROM "self" FK "__FK_self"),
		(SELECT 
			"href" AS "href_u0",
			"__FK_next"
		FROM "next" FK "__FK_next")
	FROM "links" PK "__KEY_links" FK "__FK_links"),
	(SELECT 
		"id",
		"tenantId",
		"created",
		"lastUpdated",
		"status",
		"name",
		"subject",
		"email",
		"__KEY_data",
		"__FK_data",
		(SELECT 
			"@Value",
			"__FK_roles"
		FROM "roles" FK "__FK_roles" ArrayValueAlias "@Value"),
		(SELECT 
			"__KEY_links_u0",
			"__FK_links_u0",
			(SELECT 
				"href" AS "href_u1",
				"__FK_self_u0"
			FROM "self" FK "__FK_self_u0")
		FROM "links" PK "__KEY_links_u0" FK "__FK_links_u0")
	FROM "data" PK "__KEY_data" FK "__FK_data")
FROM JSON (wrap on) "root" PK "__KEY_root";

[self]:
LOAD	[href],
	[__FK_self] AS [__KEY_links]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_self]);


[next]:
LOAD	[href_u0] AS [href_u0],
	[__FK_next] AS [__KEY_links]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_next]);


[links]:
LOAD	[__KEY_links],
	[__FK_links] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_links]);


[roles]:
LOAD	[@Value],
	[__FK_roles] AS [__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_roles]);


[self_u0]:
LOAD	[href_u1] AS [href_u1],
	[__FK_self_u0] AS [__KEY_links_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_self_u0]);


[links_u0]:
LOAD	[__KEY_links_u0],
	[__FK_links_u0] AS [__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_links_u0]);


[data]:
LOAD	[id],
	[tenantId],
	[created],
	[lastUpdated],
	[status],
	[name],
	[subject],
	[email],
	[__KEY_data],
	[__FK_data] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_data]);


[root]:
LOAD	[__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__KEY_root]);


DROP TABLE RestConnectorMasterTable;



///$tab Get Audit Types
LIB CONNECT TO 'Development:REST for Reload Monitor';

RestConnectorMasterTable:
SQL SELECT 
	"__KEY_root",
	(SELECT 
		"@Value",
		"__FK_data"
	FROM "data" FK "__FK_data" ArrayValueAlias "@Value")
FROM JSON (wrap on) "root" PK "__KEY_root"
WITH CONNECTION(
			URL "https://$(vu_tenant_fqdn)/api/v1/audits/types"
            );

[data]:
LOAD	[@Value],
	[__FK_data] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_data]);


DROP TABLE RestConnectorMasterTable;



///$tab Reloads Raw
LIB CONNECT TO 'Development:REST for Reload Monitor (AW)';

RestConnectorMasterTable:
SQL SELECT 
	"__KEY_root",
	(SELECT 
		"id",
		"appId",
		"tenantId",
		"userId",
		"type",
		"status",
		"log",
		"duration",
		"creationTime",
		"startTime",
		"endTime",
		"engineTime",
		"__KEY_data",
		"__FK_data",
		(SELECT 
			"__KEY_links",
			"__FK_links",
			(SELECT 
				"href",
				"__FK_self"
			FROM "self" FK "__FK_self")
		FROM "links" PK "__KEY_links" FK "__FK_links")
	FROM "data" PK "__KEY_data" FK "__FK_data"),
	(SELECT 
		"__KEY_links_u0",
		"__FK_links_u0",
		(SELECT 
			"href" AS "href_u0",
			"__FK_self_u0"
		FROM "self" FK "__FK_self_u0"),
		(SELECT 
			"href" AS "href_u1",
			"__FK_next"
		FROM "next" FK "__FK_next")
	FROM "links" PK "__KEY_links_u0" FK "__FK_links_u0")
FROM JSON (wrap on) "root" PK "__KEY_root";

[self]:
LOAD	[href],
	[__FK_self] AS [__KEY_links]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_self]);


[links]:
LOAD	[__KEY_links],
	[__FK_links] AS [__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_links]);


[data]:
LOAD	[id],
	[appId],
	[tenantId],
	[userId],
	[type],
	[status],
	[log],
	[duration],
	[creationTime],
	[startTime],
	[endTime],
	[engineTime],
	[__KEY_data],
	[__FK_data] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_data]);


[self_u0]:
LOAD	[href_u0] AS [href_u0],
	[__FK_self_u0] AS [__KEY_links_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_self_u0]);


[next]:
LOAD	[href_u1] AS [href_u1],
	[__FK_next] AS [__KEY_links_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_next]);


[links_u0]:
LOAD	[__KEY_links_u0],
	[__FK_links_u0] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_links_u0]);


[root]:
LOAD	[__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__KEY_root]);


DROP TABLE RestConnectorMasterTable;




///$tab Items Raw
LIB CONNECT TO 'Development:REST for Reload Monitor (AW)';

RestConnectorMasterTable:
SQL SELECT 
	"__KEY_root",
	(SELECT 
		"name" AS "name_u0",
		"description" AS "description_u0",
		"resourceCustomAttributes",
		"resourceUpdatedAt",
		"resourceType",
		"resourceSubType",
		"resourceId",
		"resourceCreatedAt",
		"id" AS "id_u0",
		"createdAt",
		"updatedAt",
		"creatorId",
		"updaterId",
		"tenantId",
		"isFavorited" AS "isFavorited_u0",
		"ownerId" AS "ownerId_u0",
		"resourceReloadEndTime",
		"resourceReloadStatus",
		"__KEY_data",
		"__FK_data",
		(SELECT 
			"_resourcetype",
			"createdDate",
			"description",
			"dynamicColor",
			"hasSectionAccess",
			"id",
			"lastReloadTime",
			"modifiedDate",
			"name",
			"originAppId",
			"owner",
			"ownerId",
			"publishTime",
			"published",
			"spaceId",
			"thumbnail",
			"__FK_resourceAttributes"
		FROM "resourceAttributes" FK "__FK_resourceAttributes"),
		(SELECT 
			"__KEY_links",
			"__FK_links",
			(SELECT 
				"href",
				"__FK_self"
			FROM "self" FK "__FK_self"),
			(SELECT 
				"href" AS "href_u0",
				"__FK_thumbnail"
			FROM "thumbnail" FK "__FK_thumbnail"),
			(SELECT 
				"href" AS "href_u1",
				"__FK_collections"
			FROM "collections" FK "__FK_collections"),
			(SELECT 
				"href" AS "href_u2",
				"__FK_open"
			FROM "open" FK "__FK_open")
		FROM "links" PK "__KEY_links" FK "__FK_links"),
		(SELECT 
			"@Value",
			"__FK_actions"
		FROM "actions" FK "__FK_actions" ArrayValueAlias "@Value"),
		(SELECT 
			"@Value" AS "@Value_u0",
			"__FK_collectionIds"
		FROM "collectionIds" FK "__FK_collectionIds" ArrayValueAlias "@Value_u0"),
		(SELECT 
			"isFavorited",
			"__KEY_meta",
			"__FK_meta",
			(SELECT 
				"@Value" AS "@Value_u1",
				"__FK_actions_u0"
			FROM "actions" FK "__FK_actions_u0" ArrayValueAlias "@Value_u1"),
			(SELECT 
				"@Value" AS "@Value_u2",
				"__FK_tags"
			FROM "tags" FK "__FK_tags" ArrayValueAlias "@Value_u2"),
			(SELECT 
				"@Value" AS "@Value_u3",
				"__FK_collections_u0"
			FROM "collections" FK "__FK_collections_u0" ArrayValueAlias "@Value_u3")
		FROM "meta" PK "__KEY_meta" FK "__FK_meta")
	FROM "data" PK "__KEY_data" FK "__FK_data"),
	(SELECT 
		"__KEY_links_u0",
		"__FK_links_u0",
		(SELECT 
			"href" AS "href_u3",
			"__FK_self_u0"
		FROM "self" FK "__FK_self_u0"),
		(SELECT 
			"href" AS "href_u4",
			"__FK_next"
		FROM "next" FK "__FK_next")
	FROM "links" PK "__KEY_links_u0" FK "__FK_links_u0")
FROM JSON (wrap on) "root" PK "__KEY_root";

[resourceAttributes]:
LOAD	[_resourcetype],
	[createdDate],
	[description],
	[dynamicColor],
	[hasSectionAccess],
	[id],
	[lastReloadTime],
	[modifiedDate],
	[name],
	[originAppId],
	[owner],
	[ownerId],
	[publishTime],
	[published],
	[spaceId],
	[thumbnail],
	[__FK_resourceAttributes] AS [__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_resourceAttributes]);


[self]:
LOAD	[href],
	[__FK_self] AS [__KEY_links]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_self]);


[thumbnail]:
LOAD	[href_u0] AS [href_u0],
	[__FK_thumbnail] AS [__KEY_links]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_thumbnail]);


[collections]:
LOAD	[href_u1] AS [href_u1],
	[__FK_collections] AS [__KEY_links]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_collections]);


[open]:
LOAD	[href_u2] AS [href_u2],
	[__FK_open] AS [__KEY_links]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_open]);


[links]:
LOAD	[__KEY_links],
	[__FK_links] AS [__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_links]);


[actions]:
LOAD	[@Value],
	[__FK_actions] AS [__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_actions]);


[collectionIds]:
LOAD	[@Value_u0] AS [@Value_u0],
	[__FK_collectionIds] AS [__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_collectionIds]);


[actions_u0]:
LOAD	[@Value_u1] AS [@Value_u1],
	[__FK_actions_u0] AS [__KEY_meta]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_actions_u0]);


[tags]:
LOAD	[@Value_u2] AS [@Value_u2],
	[__FK_tags] AS [__KEY_meta]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_tags]);


[collections_u0]:
LOAD	[@Value_u3] AS [@Value_u3],
	[__FK_collections_u0] AS [__KEY_meta]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_collections_u0]);


[meta]:
LOAD	[isFavorited],
	[__KEY_meta],
	[__FK_meta] AS [__KEY_data]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_meta]);


[data]:
LOAD	[name_u0] AS [name_u0],
	[description_u0] AS [description_u0],
	[resourceCustomAttributes],
	[resourceUpdatedAt],
	[resourceType],
	[resourceSubType],
	[resourceId],
	[resourceCreatedAt],
	[id_u0] AS [id_u0],
	[createdAt],
	[updatedAt],
	[creatorId],
	[updaterId],
	[tenantId],
	[isFavorited_u0] AS [isFavorited_u0],
	[ownerId_u0] AS [ownerId_u0],
	[resourceReloadEndTime],
	[resourceReloadStatus],
	[__KEY_data],
	[__FK_data] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_data]);


[self_u0]:
LOAD	[href_u3] AS [href_u3],
	[__FK_self_u0] AS [__KEY_links_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_self_u0]);


[next]:
LOAD	[href_u4] AS [href_u4],
	[__FK_next] AS [__KEY_links_u0]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_next]);


[links_u0]:
LOAD	[__KEY_links_u0],
	[__FK_links_u0] AS [__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_links_u0]);


[root]:
LOAD	[__KEY_root]
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__KEY_root]);


DROP TABLE RestConnectorMasterTable;



